# builds the static/dynamic skel
ifeq (1,$(V_dynamic))
BUILD_DLLS += libdownscaleBy2_skel
BUILD_DLLS += downscaleBy2_q
else
BUILD_LIBS += libdownscaleBy2_skel
endif


CC_FLAGS += $(MHVX_DOUBLE_FLAG)
ASM_FLAGS += $(MHVX_DOUBLE_FLAG)

# Use -O0 temporarily when trying to debug C code.
#_OPT = -O0

libdownscaleBy2_skel_QAICIDLS = inc/downscaleBy2
libdownscaleBy2_skel_C_SRCS += $V/downscaleBy2_skel \
                               src/downscaleBy2_imp

# choose one of the following 3 to profile different implementations.
# The assembly implementation is the best, others are just for comparison.
libdownscaleBy2_skel.ASM_SRCS += asm_src/downscaleBy2_asm.S
#libdownscaleBy2_skel_C_SRCS += src/downscaleBy2_plain_C
#libdownscaleBy2_skel_C_SRCS += src/downscaleBy2_C_intrinsics

# The following is only needed if downscaleBy2_C_intrinsics is chosen, but doesn't hurt to be present.
libdownscaleBy2_skel.ASM_SRCS += asm_src/dspcache_asm.S

# Needs dspCV lib for worker pool
libdownscaleBy2_skel_DLLS+=libdspCV_skel

# Also build a stand-alone simulation environment executable unit test

BUILD_QEXES += downscaleBy2_q
downscaleBy2_q_OSTYPE = QURT
# The following is needed to pull QuRT support into the executable for simulation

downscaleBy2_q_DLLS+= rpcmem libdspCV_skel

downscaleBy2_q_C_SRCS+= $V/downscaleBy2_skel \
                        src/downscaleBy2_imp \
                        src/downscaleBy2
downscaleBy2_q.ASM_SRCS += asm_src/dspcache_asm.S

# choose one of the 3 implementations.
downscaleBy2_q.ASM_SRCS += asm_src/downscaleBy2_asm.S
#downscaleBy2_q_C_SRCS += src/downscaleBy2_C_intrinsics
#downscaleBy2_q_C_SRCS+=src/downscaleBy2_plain_C

all:

ifeq (WinNT,$(UNAME_S))
FILE_EXT=dll
else
FILE_EXT=so
endif

QEXE_EXEC+=--dsp_clock 800


# copy final build products to the ship directory
BUILD_COPIES = \
   $(DLLS) \
   $(EXES) \
   $(LIBS) \
   $(SHIP_DIR)/ ;
