#!/bin/bash
basedir=`dirname $0`
cd $basedir
EXAMPLES_ROOT_DIR=../../../../../
source $EXAMPLES_ROOT_DIR/setup-env.sh
rm -rf bin *.txt *.h *.o
declare -i result=0
set -x

export V_ARCH=v66
export V_ARCH_REV=hexagon_Release_dynamic_toolv82_v66
export QURT_PATH=$HEXAGON_SDK_ROOT/libs/common/qurt/compute$V_ARCH
EXAMPLES_INCLUDE=$EXAMPLES_ROOT_DIR/include
DEVICE_INCS="-I$HEXAGON_SDK_ROOT/incs -I$HEXAGON_SDK_ROOT/incs/stddef -I bin/src -I $EXAMPLES_INCLUDE -I ../../utils -I ../utils/bin/src -I$HEXAGON_SDK_ROOT/libs/common/remote/ship/android_Release -I ../../utils/ion -I ../../utils/dsp/include -I ../../utils/host/include"
HVX_INC="-I $HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$/Examples/HVX/common/include"
QURT_INC="-I $QURT_PATH/include -I$QURT_PATH/include/qurt -I$QURT_PATH/include/posix"
DMA_INC="-I$HEXAGON_SDK_ROOT/libs/ubwcdma/fw/$V_ARCH/inc -I$HEXAGON_SDK_ROOT/libs/fastcv/dspCV/$V_ARCH_REV/ship -I$HEXAGON_SDK_ROOT/test/common/test_util/$V_ARCH_REV/ship -I$HEXAGON_SDK_ROOT/libs/common/atomic/$V_ARCH_REV/ship -I$HEXAGON_SDK_ROOT/libs/common/rpcmem/$V_ARCH_REV/ship -I$HEXAGON_SDK_ROOT/libs/common/remote/ship/$V_ARCH_REV"
HALIDE_INC="-I $HALIDE_ROOT/include"
DMA_LIBS="$HEXAGON_SDK_ROOT/libs/ubwcdma/fw/$V_ARCH_REV"
QURT_LIBS="$QURT_PATH"

HL_HEXAGON_TARGET="$HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$HL_HEXAGON_TOOLS_REV/Tools/target/hexagon/lib/$V_ARCH/G0"
ANDROID_SYSROOT="$ANDROID_NDK_HOME/platforms/android-21/arch-arm64"
RUN_DEVICE_ID=${ANDROID_SERIAL}
HLREV=${HL_HEXAGON_TOOLS_REV}

mkdir -p bin/src

$HEXAGON_SDK_ROOT/tools/qaic/Ubuntu14/qaic -I$HEXAGON_SDK_ROOT/incs/stddef rpc/dma_raw_rw.idl -o bin/src

mkdir -p bin
${CXX} --std=c++11 -fno-rtti -DLOG2VLEN=7 -DRUN=1 -I $HALIDE_ROOT/include halide/dma_raw_rw_generator.cpp $HALIDE_ROOT/tools/GenGen.cpp -L$HALIDE_ROOT/lib -lHalide -lpthread -ldl -lz -g -o bin/dma_halide 

mkdir -p bin
export LD_LIBRARY_PATH=$HALIDE_ROOT/lib
./bin/dma_halide -g dma_raw_rw_halide -o bin -e h,o,html -f dma_raw_rw_halide target=hexagon-32-qurt-hexagon_dma-hvx_128

mkdir -p bin

$HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$HL_HEXAGON_TOOLS_REV/Tools/bin/hexagon-clang -mv66  -mhvx -mhvx-length=128B $DEVICE_INCS $QURT_INC -G0 -O2 -fPIC -c bin/src/dma_raw_rw_skel.c -o bin/dma_raw_rw_skel.o

mkdir -p bin

$HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$HL_HEXAGON_TOOLS_REV/Tools/bin/hexagon-clang++ -mv66  -mhvx -mhvx-length=128B --std=c++11 -v -G0 -O2 -fPIC -g -I bin $DEVICE_INCS $QURT_INC $HALIDE_INC $HVX_INC $DMA_INC -c dsp/dma_raw_rw_run.cpp -o bin/dma_raw_rw_run.o

mkdir -p bin

$HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$HL_HEXAGON_TOOLS_REV/Tools/bin/hexagon-clang++ --std=c++11 -mv66  -mhvx -mhvx-length=128B -fPIC -O2 -g $DEVICE_INCS $QURT_INC $HALIDE_INC $HVX_INC $DMA_INC -c dsp/print.cpp -o bin/print.o 

mkdir -p bin/remote

$HEXAGON_SDK_ROOT/tools/HEXAGON_Tools/$HL_HEXAGON_TOOLS_REV/Tools/bin/hexagon-clang -mv66 -mG0lib -G0 -v -fPIC -shared -lc -Wl,--start-group bin/dma_raw_rw_skel.o bin/dma_raw_rw_halide.o bin/dma_raw_rw_run.o bin/print.o -Wl,--end-group $HEXAGON_SDK_ROOT/libs/ubwcdma/fw/$V_ARCH/ubwcdma_dynlib.so -o bin/remote/libdma_raw_rw_skel.so;

mkdir -p bin

$ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android21-clang++ host/main.cpp --std=c++11 -I$HEXAGON_SDK_ROOT/libs/common/rpcmem/inc $DEVICE_INCS -fsigned-char -c -o bin/main-dma.o

mkdir -p bin/host

$ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android21-clang $DEVICE_INCS -I$HEXAGON_SDK_ROOT/libs/common/rpcmem/inc -fsigned-char bin/src/dma_raw_rw_stub.c -llog -fPIE -pie -lcdsprpc -L$HEXAGON_SDK_ROOT/libs/common/remote/ship/android_Release_aarch64 -Wl,-soname,libdma_raw_rw_stub.so -shared -o bin/host/libdma_raw_rw_stub.so 

mkdir -p bin

$ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android21-clang++ $DEVICE_INCS -I$HEXAGON_SDK_ROOT/libs/common/rpcmem/inc -fsigned-char -O3 -c ../../utils/ion/ion_allocation.cpp -o bin/ion_allocation.o 

ar q bin/libion_allocation.a bin/ion_allocation.o 
mkdir -p bin

$ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android21-clang++ $DEVICE_INCS -I$HEXAGON_SDK_ROOT/libs/common/rpcmem/inc -fsigned-char bin/main-dma.o -llog -fPIE -pie -lcdsprpc -Lbin -lion_allocation -L$HEXAGON_SDK_ROOT/libs/common/remote/ship/android_Release_aarch64 -L../utils -ldma_raw_rw_stub -Lbin/host -o bin/main-dma_raw_rw.out

if [ "z$RUNDROID" = "z" ]; then
    set +x
    export PREF=echo
    echo "To run this example on an Android device, do:"
else
    num_device_lines=`adb devices -l | sed '/^$/d' | wc -l`
    if [ $num_device_lines -gt 2 ]; then
        if [ "z$ANDROID_SERIAL" == "z" ];  then
            echo "Error: RUNDROID set to 1, but found more than one device. Set ANDROID_SERIAL"
            exit 1
        fi
    fi
fi

$PREF adb  push ../../Images/adb_raw.bin /data || { echo "adb push failed" ; exit 1; }
$PREF adb  push bin/main-dma_raw_rw.out /data/ || { echo "adb push failed" ; exit 1; }
$PREF adb  shell chmod 777 /data/main-dma_raw_rw.out  || { echo "adb shell chmod" ; exit 1; }
$PREF adb  push bin/host/libdma_raw_rw_stub.so /system/lib64 || { echo "adb push failed" ; exit 1; }
$PREF adb  push bin/remote/libdma_raw_rw_skel.so /system/lib/rfsa/adsp || { echo "adb push failed" ; exit 1; }
$PREF adb  push bin/remote/libdma_raw_rw_skel.so /data/ || { echo "adb push failed" ; exit 1; }
$PREF adb  shell cp /system/lib/rfsa/adsp/testsig*.so /data/ || { echo "copying testig failed" ; exit 1; }
$PREF adb  shell cp /system/lib/rfsa/adsp/libhalide_hexagon_remote_skel.so /data/ || { echo "copying libhalide_hexagon_remote_skel.so to device failed" ; exit 1; }
$PREF adb  shell ADSP_LIBRARY_PATH=/data/ /data/main-dma_raw_rw.out 512 512 512 0 0 "/data/adb_raw.bin" "/data/adb_raw.bin"

result=$?
exit $result
