#!/bin/bash

basedir=`dirname $0`
cd $basedir
. ../setup-env.sh
set -x

INCLUDES="-I $HALIDE_ROOT/include/ -I $HALIDE_ROOT/tools/ -I $HALIDE_ROOT/apps/support/"
HL_LIBS="$HALIDE_ROOT/lib/libHalide.a"
HL_GGEN="$HALIDE_ROOT/tools/GenGen.cpp"

#############################################################################
cat <<EOT
=== Build Host/Hexagon executable for simulation ===

Note: This test requires the following libraries to be installed on the host:
    sudo apt-get install libjpeg-dev
    sudo apt-get install libpng12-dev
    sudo apt-get install zlib1g-dev

EOT

rm -f process-host camera_pipe.a camera_pipe fcam/*.o
${CXX} -std=c++11 $INCLUDES -g -fno-rtti camera_pipe_generator.cpp $HL_GGEN $HL_LIBS -o camera_pipe  -ldl -lpthread -lz
./camera_pipe -o . -g camera_pipe target=host-hvx_128
./camera_pipe -o . -g camera_pipe target=host -f camera_pipe_cpu

${CXX} -std=c++11 $INCLUDES -c -Wall -O3 fcam/Demosaic.cpp -o fcam/Demosaic.o
${CXX} -std=c++11 $INCLUDES -c -Wall -O3 fcam/Demosaic_ARM.cpp -o fcam/Demosaic_ARM.o
${CXX} -std=c++11 $INCLUDES    -Wall -O3 process.cpp camera_pipe.a camera_pipe_cpu.a fcam/Demosaic.o fcam/Demosaic_ARM.o -o process-host -lpng -ljpeg -ldl -lpthread -lz

export LD_LIBRARY_PATH=$HALIDE_ROOT/lib/host:${HL_HEXAGON_TOOLS_SIM}/lib/iss/:.
rm -f out-host.ppm
./process-host ../Images/bayer_raw.png 3700 2.0 50 3 out-host.ppm cpu
cmp out-host.ppm ref_raw/out_cpu.ppm

rm -f out-hvx.ppm
./process-host ../Images/bayer_raw.png 3700 2.0 50 3 out-hvx.ppm hvx128
cmp out-hvx.ppm ref_raw/out.ppm

