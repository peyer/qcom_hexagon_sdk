------------------------------------------------------------------------------
 Copyright (c) 2015-2016 Qualcomm Technologies, Inc.  All Rights Reserved
------------------------------------------------------------------------------

Profiler example:

The Hexagon profiler consumes trace data generated by the Hexagon simulator and
generates an HTML file for use in identifying stalls and events that can
potentially be avoided. This example demonstrates how to use the output to
improve the performance of a mandelbrot fractal generation example by at least
10%.

The HTML output generated by the profiler is formatted into three panes:

Pane 1:
The top left pane shows cycle information including a breakdown of stalls versus
commit cycles, and a list of all stall types ordered by cycles. This pane also
includes radio buttons and hyperlinks that control the information displayed
in the other two panes.

Pane 2:
The top right pane shows a list of functions or packets ordered by cycles
consumed, depending on the radio button selected.  Clicking on a value in the
"Address" column will bring the disassembly for that address into focus in
pane 3.

Pane 3:
The bottom pane provides a disassembly view. At a minimum, this pane will
display the Address, the function the packet comes from, the disassembled
packet, and the cycles the packet consumed. The amount of information displayed
depends on which radio button is active in pane 1. The number of commits versus
stalls can be displayed, or a more detailed breakdown of each stall or event
generated by a packet and how many cycles the stall or event consumed.

--------------------
Running the Example:
--------------------

First, generate a baseline for analysis:
----------------------------------------
To generate a baseline HTML file, set your PATH to point to the Hexagon software
development tools and type "make". The mandelbrot example will be built and
simulated with stall information generating enabled. Hexagon-profiler is invoked as a
separate step to generate "mandelbrot0.html" and "mandelbrot1.html" in the v62h_1536
subdirectory.

The original code and code changes can be reviewed directly in mandelbrot.c.
